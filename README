This project implements the classic triangular peg solitaire game, also called "Tricky Triangle", using a bitwise representation for efficient board state manipulation and includes a graphical user interface built with Java Swing. The game logic is encapsulated in the PegSolitaireBitwise class, which uses a 15-bit integer to represent the presence or absence of pegs at each of the 15 board positions. A bit set to 1 indicates a peg is present, and a bit set to 0 means the peg is absent. All 36 valid moves (including symmetrical directions) are precomputed and stored in a 2D array ALL_MOVES, allowing for rapid move generation and validation. Users begin by clicking a peg to remove and then selecting three pegs (from → over → to) for each move. The application validates the move and updates the board accordingly. Precomputed solutions stored in a file are loaded into a scoreMemo map, which enables users to see the best possible endgame from the current configuration at any time.
